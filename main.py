#n = None # означает что переменная пустая

#print(5,6,7,9) таким способом выводим данные

#print(type(имя переменной))#функция тайп при запуске программы определит какой это тип данных.

#int float string и тд.

#n = "jhsadf"# способ создания строки  двойные ковычки выводяться всегда без слэша  
#n1 = 'dj\'hfjds'# Тоже способ создания стороки.Если необходимо вывести кавычку которая стоит посередине.
#необходимо поставить слэш
# """
# для многосторочных коментариев необходимо ввести строкой выше три опострофа (ковычки) 
# и в конце тоже. 
# так же можно нажимать ctrl K ctrl c эти действия закоментируют область выделенную
# """
#print(f"{a} - {b} - {c}")Интерполяция в пайтон напечатали три переменных через дефис
#print("{} - {} - {}".format(a,b,c)) способ вывода данных. остаются пустые скобки,
#А переменную мы пишем в скобках формат
 
# print('Введите первое число: ')
# a = input()  a = int(input()) второй вариант для того чтобы пример работа математически
# b = input('Введите второе число: ')  два способа написать приглашение на ввод данных.
# print(a,' + ',b,' = ',a + b) может пригодиться таким способом если переменные числа то они 
#то они выведуться одним числом составленым из переменной a & B

# c = 5.89    
# print(c)
#print(type(c))можно пользоваться методом для нахождения типа данных
# n = int(c)  таким образом мы приводим переменную с к целочисленному значению int/
# print(n)
# с = str(c) c помощью типа str мв можем к переменной добавлять еще и сторку с символами.

# c = 1
# print(c)
# print(type(c)) способ проверки на являеться ли значение переменной правдой
# c = bool(c)
# print(c)
# print(type(c))

#Орифметические операции                                приоритет в программе
#  +   сложение                                                   6
#  -   вычитание                                                  7
#  *  умножение                                                   2 
#  /  деление (по умолчанию в вещественных числах)                3
#  %  остаток от деления                                          5
#  // целочисленное деление                                       4          
#  **  введение в степень                                         1 
#
#  a = 5.235346
#  b = 6.346547
#  print(round(a*b, 3)) способ для округления большик хвостов чисел. 3 означает что мы выводим только три почледние цифры 
#  
#   iter = 2
#   iter +=3 iter = iter + 3 
#   iter -=4 iter = iter - 4
#   iter *=5 iter = iter * 5
#   iter /=5 
#   iter //=5  аналогичные действия
#   iter %=5
#   iter **5
#

# Логичиские операции
# >  больше
# >=    больше или равно    
# < меньше
# <= меньше либо равно
# ==    равнство
# != не равно
# not (не отрицание) 
# and и(конъюкция)
# or или (дизъюнкция)
#
#
#   username=input('Введитеимя:') 
#   if username=='Маша': 
#   print('Ура,этожеМАША!') 
#   elif username=='Марина':
#   print('ЯтакждалаВас,Марина!') 
#   elifusername=='Ильнар': 
#   print('Ильнар-топ)')                  пример программы строк и вывода по именам 
#   else: print('Привет,',username)
#
#   n = int(input()) 
#   flag = True создали переменную правда
#   i = 2
#   while flag: цикл будет выполняться пока переменная флаг равна правде
#   if n % i == 0:  если остаток при делении числа n на i равен 0
#  
#   flag = False  переменная неправда прекращает работу цикла 
#   print(i) 
#    
#   
#   elif i > n // 2:    делить числа не может превышать введенное число, деленно на 2
#   print(n)
#   
#   flag = False
#   i += 1 
#
#   Циклfor, range
#   В Python цикл for в основном используется для перебора значений
#
#   Range ●
#   Rangeвыдаетзначенияиздиапазонасшагом1. ●
#   Если указано только одно число—от 0 дозаданного числа. ● 
#   Если нужен другой шаг,третьим аргументом можно задать приращение.
#   
#
#   Кортежы (неизменяемый тип данных , список) класс 'tuple'
#   t = () пустой кортеж
#   print (type(t))проверка на тип данных
#   print(tuple(t)) Способ преобразования допустим списка или переменной в кортеж
#   
#   словари- неупорядоченные коллекции произвольных объектов с доступом по ключу
#   d = {} Создание пустого словаря (фигурные скобки) 
#   d = dict() ещё способ создания словаря 
#   
#   d['q'] = 'qwerty' на этом примере мы создаем ключ в котором слово qwerty
#   print(d['q']) способ вызова переменной с помощью ключа
#   del dictionary['q'] удаление элемента в том случае если он не нужен в списке 
# 
# 
# 
# 
# 
# 
# 
# 
#    






